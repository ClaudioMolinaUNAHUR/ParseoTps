
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightELSEleftORleftANDrightNOTnonassocEQNELTLEGTGEleftPLUSMINUSleftMULTIPLYDIVIDEADD AND BOOL COLON COMMA COMMENT CONSOLE DIVIDE ELSE END EQ FALSE FUNC GE GT HAS ID IF IN LBRACE LBRACKET LE LIST LOOP LPAREN LT MINUS MULTIPLY NE NOT NUM NUMBER OR PLUS RANGE RBRACE RBRACKET REMOVE RETURN RPAREN SIZE START STR STRING TRUEprogram : START content ENDcontent : statement_liststatement_list : statement_list statement\n                      | emptystatement : content_no_return\n                 | expcontent_no_return : function\n                         | function_return\n                         | loop\n                         | conditional\n                         | var\n                         | assign\n                         | list_assign\n                         | add_list_item\n                         | consoleconsole : CONSOLE LPAREN args RPARENfunction : FUNC ID LPAREN opt_param_list RPAREN LBRACE content RBRACEfunction_return : FUNC ID LPAREN opt_param_list RPAREN COLON type LBRACE content RETURN exp RBRACEopt_param_list : param_list\n                      | emptyparam_list : param_list COMMA param\n                  | paramparam : type ID opt_defaultopt_default : COLON exp\n                   | emptycall_func : ID LPAREN args RPAREN\n                 | ID LPAREN RPARENconditional : IF LPAREN exp RPAREN LBRACE content RBRACE\n                   | IF LPAREN exp RPAREN LBRACE content RBRACE ELSE LBRACE content RBRACE\n                   | IF LPAREN exp RPAREN LBRACE content RBRACE ELSE conditionalloop : LOOP LPAREN ID IN range RPAREN LBRACE content RBRACErange : RANGE LPAREN exp COMMA exp RPAREN\n             | RANGE LPAREN exp RPAREN\n             | RANGE LPAREN exp COMMA exp COMMA exp RPARENexp : exp operator exp\n           | op_bool_un exp\n           | primary_expprimary_exp : error\n                   | call_func\n                   | primitive\n                   | id\n                   | len_list_item\n                   | remove_list_item\n                   | read_list_item\n                   | has_list_item\n                   | list\n                   | LPAREN exp RPARENvar : type ID COLON expassign : ID COLON expargs : args COMMA exp\n            | expid : IDoperator : PLUS\n                | MINUS\n                | MULTIPLY\n                | DIVIDE\n                | AND\n                | OR\n                | LT\n                | GT\n                | LE\n                | GE\n                | EQ\n                | NEop_bool_un : NOTtype : STR\n            | NUM\n            | BOOL\n            | LIST LT type GTlist : LBRACKET list_content RBRACKET\n            | LBRACKET RBRACKETlist_content : list_content COMMA exp\n                    | expadd_list_item : ADD LPAREN exp COMMA exp RPARENlen_list_item : SIZE LPAREN exp RPARENread_list_item : id LBRACKET exp RBRACKETremove_list_item : REMOVE LPAREN exp RPARENhas_list_item : HAS LPAREN exp COMMA primitive RPARENlist_assign : id LBRACKET exp RBRACKET COLON expprimitive : NUMBER\n                 | STRING\n                 | TRUE\n                 | FALSEempty :'
    
_lr_action_items = {'START':([0,],[2,]),'$end':([1,6,],[0,-1,]),'FUNC':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,22,27,32,33,34,35,36,37,38,39,44,45,46,47,64,65,66,76,84,87,89,91,96,110,112,115,118,120,121,123,130,134,143,144,145,149,151,152,153,159,161,162,169,170,],[-84,21,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-37,-52,-41,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,-36,-41,-52,-71,-35,-49,-27,-47,-70,-26,-48,-76,-16,-75,-77,-76,-84,-84,-79,-74,-78,-84,-28,-17,-84,-31,-84,-30,-29,-18,]),'LOOP':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,22,27,32,33,34,35,36,37,38,39,44,45,46,47,64,65,66,76,84,87,89,91,96,110,112,115,118,120,121,123,130,134,143,144,145,149,151,152,153,159,161,162,169,170,],[-84,25,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-37,-52,-41,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,-36,-41,-52,-71,-35,-49,-27,-47,-70,-26,-48,-76,-16,-75,-77,-76,-84,-84,-79,-74,-78,-84,-28,-17,-84,-31,-84,-30,-29,-18,]),'IF':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,22,27,32,33,34,35,36,37,38,39,44,45,46,47,64,65,66,76,84,87,89,91,96,110,112,115,118,120,121,123,130,134,143,144,145,149,151,152,153,157,159,161,162,169,170,],[-84,26,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-37,-52,-41,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,-36,-41,-52,-71,-35,-49,-27,-47,-70,-26,-48,-76,-16,-75,-77,-76,-84,-84,-79,-74,-78,-84,-28,-17,-84,26,-31,-84,-30,-29,-18,]),'ID':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,72,73,74,76,78,79,81,82,83,84,85,87,89,91,92,96,97,106,110,111,112,115,117,118,119,120,121,123,130,131,134,137,141,143,144,145,149,151,152,153,155,159,161,162,163,164,169,170,],[-84,22,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,66,-37,67,-52,66,71,-41,66,-65,-38,-39,-40,-42,-43,-44,-45,-46,-66,-67,-68,-80,-81,-82,-83,66,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-36,-41,-52,66,66,93,66,66,-71,66,66,66,66,66,-35,66,-49,-27,-47,66,-70,66,125,-26,66,-48,-76,66,-16,-69,-75,-77,-76,-84,66,-84,66,66,-79,-74,-78,-84,-28,-17,-84,66,-31,-84,-30,66,66,-29,-18,]),'ADD':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,22,27,32,33,34,35,36,37,38,39,44,45,46,47,64,65,66,76,84,87,89,91,96,110,112,115,118,120,121,123,130,134,143,144,145,149,151,152,153,159,161,162,169,170,],[-84,29,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-37,-52,-41,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,-36,-41,-52,-71,-35,-49,-27,-47,-70,-26,-48,-76,-16,-75,-77,-76,-84,-84,-79,-74,-78,-84,-28,-17,-84,-31,-84,-30,-29,-18,]),'CONSOLE':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,22,27,32,33,34,35,36,37,38,39,44,45,46,47,64,65,66,76,84,87,89,91,96,110,112,115,118,120,121,123,130,134,143,144,145,149,151,152,153,159,161,162,169,170,],[-84,30,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-37,-52,-41,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,-36,-41,-52,-71,-35,-49,-27,-47,-70,-26,-48,-76,-16,-75,-77,-76,-84,-84,-79,-74,-78,-84,-28,-17,-84,-31,-84,-30,-29,-18,]),'NOT':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,27,28,31,32,33,34,35,36,37,38,39,44,45,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,73,74,76,78,79,81,82,83,84,85,87,89,91,92,96,97,110,111,112,115,117,118,120,121,123,130,131,134,137,141,143,144,145,149,151,152,153,155,159,161,162,163,164,169,170,],[-84,31,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,31,-37,-52,31,-41,31,-65,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,31,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-36,-41,-52,31,31,31,31,-71,31,31,31,31,31,-35,31,-49,-27,-47,31,-70,31,-26,31,-48,-76,31,-16,-75,-77,-76,-84,31,-84,31,31,-79,-74,-78,-84,-28,-17,-84,31,-31,-84,-30,31,31,-29,-18,]),'error':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,27,28,31,32,33,34,35,36,37,38,39,44,45,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,73,74,76,78,79,81,82,83,84,85,87,89,91,92,96,97,110,111,112,115,117,118,120,121,123,130,131,134,137,141,143,144,145,149,151,152,153,155,159,161,162,163,164,169,170,],[-84,32,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,32,-37,-52,32,-41,32,-65,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,32,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-36,-41,-52,32,32,32,32,-71,32,32,32,32,32,-35,32,-49,-27,-47,32,-70,32,-26,32,-48,-76,32,-16,-75,-77,-76,-84,32,-84,32,32,-79,-74,-78,-84,-28,-17,-84,32,-31,-84,-30,32,32,-29,-18,]),'LPAREN':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,76,78,79,81,82,83,84,85,87,89,91,92,96,97,110,111,112,115,117,118,120,121,123,129,130,131,134,137,141,143,144,145,149,151,152,153,155,159,161,162,163,164,169,170,],[-84,23,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,23,-37,69,23,72,73,-41,23,78,79,-65,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,81,82,83,23,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-36,-41,69,86,23,23,23,23,-71,23,23,23,23,23,-35,23,-49,-27,-47,23,-70,23,-26,23,-48,-76,23,-16,-75,-77,-76,141,-84,23,-84,23,23,-79,-74,-78,-84,-28,-17,-84,23,-31,-84,-30,23,23,-29,-18,]),'STR':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,22,27,32,33,34,35,36,37,38,39,44,45,46,47,64,65,66,76,80,84,86,87,89,91,96,110,112,115,118,120,121,123,126,130,134,135,143,144,145,149,151,152,153,159,161,162,169,170,],[-84,40,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-37,-52,-41,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,-36,-41,-52,-71,40,-35,40,-49,-27,-47,-70,-26,-48,-76,-16,-75,-77,-76,40,-84,-84,40,-79,-74,-78,-84,-28,-17,-84,-31,-84,-30,-29,-18,]),'NUM':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,22,27,32,33,34,35,36,37,38,39,44,45,46,47,64,65,66,76,80,84,86,87,89,91,96,110,112,115,118,120,121,123,126,130,134,135,143,144,145,149,151,152,153,159,161,162,169,170,],[-84,41,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-37,-52,-41,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,-36,-41,-52,-71,41,-35,41,-49,-27,-47,-70,-26,-48,-76,-16,-75,-77,-76,41,-84,-84,41,-79,-74,-78,-84,-28,-17,-84,-31,-84,-30,-29,-18,]),'BOOL':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,22,27,32,33,34,35,36,37,38,39,44,45,46,47,64,65,66,76,80,84,86,87,89,91,96,110,112,115,118,120,121,123,126,130,134,135,143,144,145,149,151,152,153,159,161,162,169,170,],[-84,42,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-37,-52,-41,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,-36,-41,-52,-71,42,-35,42,-49,-27,-47,-70,-26,-48,-76,-16,-75,-77,-76,42,-84,-84,42,-79,-74,-78,-84,-28,-17,-84,-31,-84,-30,-29,-18,]),'LIST':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,22,27,32,33,34,35,36,37,38,39,44,45,46,47,64,65,66,76,80,84,86,87,89,91,96,110,112,115,118,120,121,123,126,130,134,135,143,144,145,149,151,152,153,159,161,162,169,170,],[-84,43,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-37,-52,-41,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,-36,-41,-52,-71,43,-35,43,-49,-27,-47,-70,-26,-48,-76,-16,-75,-77,-76,43,-84,-84,43,-79,-74,-78,-84,-28,-17,-84,-31,-84,-30,-29,-18,]),'NUMBER':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,27,28,31,32,33,34,35,36,37,38,39,44,45,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,73,74,76,78,79,81,82,83,84,85,87,89,91,92,96,97,110,111,112,115,117,118,120,121,122,123,130,131,134,137,141,143,144,145,149,151,152,153,155,159,161,162,163,164,169,170,],[-84,44,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,44,-37,-52,44,-41,44,-65,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-36,-41,-52,44,44,44,44,-71,44,44,44,44,44,-35,44,-49,-27,-47,44,-70,44,-26,44,-48,-76,44,-16,-75,-77,44,-76,-84,44,-84,44,44,-79,-74,-78,-84,-28,-17,-84,44,-31,-84,-30,44,44,-29,-18,]),'STRING':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,27,28,31,32,33,34,35,36,37,38,39,44,45,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,73,74,76,78,79,81,82,83,84,85,87,89,91,92,96,97,110,111,112,115,117,118,120,121,122,123,130,131,134,137,141,143,144,145,149,151,152,153,155,159,161,162,163,164,169,170,],[-84,45,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,45,-37,-52,45,-41,45,-65,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,45,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-36,-41,-52,45,45,45,45,-71,45,45,45,45,45,-35,45,-49,-27,-47,45,-70,45,-26,45,-48,-76,45,-16,-75,-77,45,-76,-84,45,-84,45,45,-79,-74,-78,-84,-28,-17,-84,45,-31,-84,-30,45,45,-29,-18,]),'TRUE':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,27,28,31,32,33,34,35,36,37,38,39,44,45,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,73,74,76,78,79,81,82,83,84,85,87,89,91,92,96,97,110,111,112,115,117,118,120,121,122,123,130,131,134,137,141,143,144,145,149,151,152,153,155,159,161,162,163,164,169,170,],[-84,46,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,46,-37,-52,46,-41,46,-65,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,46,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-36,-41,-52,46,46,46,46,-71,46,46,46,46,46,-35,46,-49,-27,-47,46,-70,46,-26,46,-48,-76,46,-16,-75,-77,46,-76,-84,46,-84,46,46,-79,-74,-78,-84,-28,-17,-84,46,-31,-84,-30,46,46,-29,-18,]),'FALSE':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,27,28,31,32,33,34,35,36,37,38,39,44,45,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,73,74,76,78,79,81,82,83,84,85,87,89,91,92,96,97,110,111,112,115,117,118,120,121,122,123,130,131,134,137,141,143,144,145,149,151,152,153,155,159,161,162,163,164,169,170,],[-84,47,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,47,-37,-52,47,-41,47,-65,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,47,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-36,-41,-52,47,47,47,47,-71,47,47,47,47,47,-35,47,-49,-27,-47,47,-70,47,-26,47,-48,-76,47,-16,-75,-77,47,-76,-84,47,-84,47,47,-79,-74,-78,-84,-28,-17,-84,47,-31,-84,-30,47,47,-29,-18,]),'SIZE':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,27,28,31,32,33,34,35,36,37,38,39,44,45,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,73,74,76,78,79,81,82,83,84,85,87,89,91,92,96,97,110,111,112,115,117,118,120,121,123,130,131,134,137,141,143,144,145,149,151,152,153,155,159,161,162,163,164,169,170,],[-84,48,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,48,-37,-52,48,-41,48,-65,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,48,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-36,-41,-52,48,48,48,48,-71,48,48,48,48,48,-35,48,-49,-27,-47,48,-70,48,-26,48,-48,-76,48,-16,-75,-77,-76,-84,48,-84,48,48,-79,-74,-78,-84,-28,-17,-84,48,-31,-84,-30,48,48,-29,-18,]),'REMOVE':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,27,28,31,32,33,34,35,36,37,38,39,44,45,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,73,74,76,78,79,81,82,83,84,85,87,89,91,92,96,97,110,111,112,115,117,118,120,121,123,130,131,134,137,141,143,144,145,149,151,152,153,155,159,161,162,163,164,169,170,],[-84,49,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,49,-37,-52,49,-41,49,-65,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,49,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-36,-41,-52,49,49,49,49,-71,49,49,49,49,49,-35,49,-49,-27,-47,49,-70,49,-26,49,-48,-76,49,-16,-75,-77,-76,-84,49,-84,49,49,-79,-74,-78,-84,-28,-17,-84,49,-31,-84,-30,49,49,-29,-18,]),'HAS':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,27,28,31,32,33,34,35,36,37,38,39,44,45,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,73,74,76,78,79,81,82,83,84,85,87,89,91,92,96,97,110,111,112,115,117,118,120,121,123,130,131,134,137,141,143,144,145,149,151,152,153,155,159,161,162,163,164,169,170,],[-84,50,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,50,-37,-52,50,-41,50,-65,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,50,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-36,-41,-52,50,50,50,50,-71,50,50,50,50,50,-35,50,-49,-27,-47,50,-70,50,-26,50,-48,-76,50,-16,-75,-77,-76,-84,50,-84,50,50,-79,-74,-78,-84,-28,-17,-84,50,-31,-84,-30,50,50,-29,-18,]),'LBRACKET':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,27,28,31,32,33,34,35,36,37,38,39,44,45,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,73,74,76,78,79,81,82,83,84,85,87,89,91,92,96,97,110,111,112,115,117,118,120,121,123,130,131,134,137,141,143,144,145,149,151,152,153,155,159,161,162,163,164,169,170,],[-84,28,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,28,-37,-52,28,74,28,-65,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,28,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-36,85,-52,28,28,28,28,-71,28,28,28,28,28,-35,28,-49,-27,-47,28,-70,28,-26,28,-48,-76,28,-16,-75,-77,-76,-84,28,-84,28,28,-79,-74,-78,-84,-28,-17,-84,28,-31,-84,-30,28,28,-29,-18,]),'END':([2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,22,27,32,33,34,35,36,37,38,39,44,45,46,47,64,65,66,76,84,87,89,91,96,110,112,115,118,120,121,123,143,144,145,151,152,159,162,169,170,],[-84,6,-2,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-37,-52,-41,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,-36,-41,-52,-71,-35,-49,-27,-47,-70,-26,-48,-76,-16,-75,-77,-76,-79,-74,-78,-28,-17,-31,-30,-29,-18,]),'RBRACE':([4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,22,27,32,33,34,35,36,37,38,39,44,45,46,47,64,65,66,76,84,87,89,91,96,110,112,115,118,120,121,123,130,134,142,143,144,145,146,149,151,152,154,159,161,162,166,167,169,170,],[-2,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-37,-52,-41,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,-36,-41,-52,-71,-35,-49,-27,-47,-70,-26,-48,-76,-16,-75,-77,-76,-84,-84,151,-79,-74,-78,152,-84,-28,-17,159,-31,-84,-30,169,170,-29,-18,]),'RETURN':([4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,22,27,32,33,34,35,36,37,38,39,44,45,46,47,64,65,66,76,84,87,89,91,96,110,112,115,118,120,121,123,143,144,145,151,152,153,158,159,162,169,170,],[-2,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-37,-52,-41,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,-36,-41,-52,-71,-35,-49,-27,-47,-70,-26,-48,-76,-16,-75,-77,-76,-79,-74,-78,-28,-17,-84,163,-31,-30,-29,-18,]),'PLUS':([9,20,22,27,32,33,34,35,36,37,38,39,44,45,46,47,64,65,66,70,76,77,84,87,89,90,91,94,95,96,98,101,102,103,104,110,112,115,116,120,121,123,127,132,143,145,148,150,160,167,168,],[52,-37,-52,-41,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,52,-41,-52,52,-71,52,52,52,-27,52,-47,52,52,-70,52,52,52,52,52,-26,52,-76,52,-75,-77,-76,52,52,52,-78,52,52,52,52,52,]),'MINUS':([9,20,22,27,32,33,34,35,36,37,38,39,44,45,46,47,64,65,66,70,76,77,84,87,89,90,91,94,95,96,98,101,102,103,104,110,112,115,116,120,121,123,127,132,143,145,148,150,160,167,168,],[53,-37,-52,-41,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,53,-41,-52,53,-71,53,53,53,-27,53,-47,53,53,-70,53,53,53,53,53,-26,53,-76,53,-75,-77,-76,53,53,53,-78,53,53,53,53,53,]),'MULTIPLY':([9,20,22,27,32,33,34,35,36,37,38,39,44,45,46,47,64,65,66,70,76,77,84,87,89,90,91,94,95,96,98,101,102,103,104,110,112,115,116,120,121,123,127,132,143,145,148,150,160,167,168,],[54,-37,-52,-41,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,54,-41,-52,54,-71,54,54,54,-27,54,-47,54,54,-70,54,54,54,54,54,-26,54,-76,54,-75,-77,-76,54,54,54,-78,54,54,54,54,54,]),'DIVIDE':([9,20,22,27,32,33,34,35,36,37,38,39,44,45,46,47,64,65,66,70,76,77,84,87,89,90,91,94,95,96,98,101,102,103,104,110,112,115,116,120,121,123,127,132,143,145,148,150,160,167,168,],[55,-37,-52,-41,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,55,-41,-52,55,-71,55,55,55,-27,55,-47,55,55,-70,55,55,55,55,55,-26,55,-76,55,-75,-77,-76,55,55,55,-78,55,55,55,55,55,]),'AND':([9,20,22,27,32,33,34,35,36,37,38,39,44,45,46,47,64,65,66,70,76,77,84,87,89,90,91,94,95,96,98,101,102,103,104,110,112,115,116,120,121,123,127,132,143,145,148,150,160,167,168,],[56,-37,-52,-41,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,56,-41,-52,56,-71,56,56,56,-27,56,-47,56,56,-70,56,56,56,56,56,-26,56,-76,56,-75,-77,-76,56,56,56,-78,56,56,56,56,56,]),'OR':([9,20,22,27,32,33,34,35,36,37,38,39,44,45,46,47,64,65,66,70,76,77,84,87,89,90,91,94,95,96,98,101,102,103,104,110,112,115,116,120,121,123,127,132,143,145,148,150,160,167,168,],[57,-37,-52,-41,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,57,-41,-52,57,-71,57,57,57,-27,57,-47,57,57,-70,57,57,57,57,57,-26,57,-76,57,-75,-77,-76,57,57,57,-78,57,57,57,57,57,]),'LT':([9,20,22,27,32,33,34,35,36,37,38,39,43,44,45,46,47,64,65,66,70,76,77,84,87,89,90,91,94,95,96,98,101,102,103,104,110,112,115,116,120,121,123,127,132,143,145,148,150,160,167,168,],[58,-37,-52,-41,-38,-39,-40,-42,-43,-44,-45,-46,80,-80,-81,-82,-83,58,-41,-52,58,-71,58,58,58,-27,58,-47,58,58,-70,58,58,58,58,58,-26,58,-76,58,-75,-77,-76,58,58,58,-78,58,58,58,58,58,]),'GT':([9,20,22,27,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,64,65,66,70,76,77,84,87,89,90,91,94,95,96,98,100,101,102,103,104,110,112,115,116,119,120,121,123,127,132,143,145,148,150,160,167,168,],[59,-37,-52,-41,-38,-39,-40,-42,-43,-44,-45,-46,-66,-67,-68,-80,-81,-82,-83,59,-41,-52,59,-71,59,59,59,-27,59,-47,59,59,-70,59,119,59,59,59,59,-26,59,-76,59,-69,-75,-77,-76,59,59,59,-78,59,59,59,59,59,]),'LE':([9,20,22,27,32,33,34,35,36,37,38,39,44,45,46,47,64,65,66,70,76,77,84,87,89,90,91,94,95,96,98,101,102,103,104,110,112,115,116,120,121,123,127,132,143,145,148,150,160,167,168,],[60,-37,-52,-41,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,60,-41,-52,60,-71,60,60,60,-27,60,-47,60,60,-70,60,60,60,60,60,-26,60,-76,60,-75,-77,-76,60,60,60,-78,60,60,60,60,60,]),'GE':([9,20,22,27,32,33,34,35,36,37,38,39,44,45,46,47,64,65,66,70,76,77,84,87,89,90,91,94,95,96,98,101,102,103,104,110,112,115,116,120,121,123,127,132,143,145,148,150,160,167,168,],[61,-37,-52,-41,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,61,-41,-52,61,-71,61,61,61,-27,61,-47,61,61,-70,61,61,61,61,61,-26,61,-76,61,-75,-77,-76,61,61,61,-78,61,61,61,61,61,]),'EQ':([9,20,22,27,32,33,34,35,36,37,38,39,44,45,46,47,64,65,66,70,76,77,84,87,89,90,91,94,95,96,98,101,102,103,104,110,112,115,116,120,121,123,127,132,143,145,148,150,160,167,168,],[62,-37,-52,-41,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,62,-41,-52,62,-71,62,62,62,-27,62,-47,62,62,-70,62,62,62,62,62,-26,62,-76,62,-75,-77,-76,62,62,62,-78,62,62,62,62,62,]),'NE':([9,20,22,27,32,33,34,35,36,37,38,39,44,45,46,47,64,65,66,70,76,77,84,87,89,90,91,94,95,96,98,101,102,103,104,110,112,115,116,120,121,123,127,132,143,145,148,150,160,167,168,],[63,-37,-52,-41,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,63,-41,-52,63,-71,63,63,63,-27,63,-47,63,63,-70,63,63,63,63,63,-26,63,-76,63,-75,-77,-76,63,63,63,-78,63,63,63,63,63,]),'RPAREN':([20,32,33,34,35,36,37,38,39,44,45,46,47,64,65,66,69,70,76,84,86,88,89,90,91,94,96,99,101,102,105,107,108,109,110,120,121,123,125,127,128,132,133,136,138,139,145,148,150,156,160,165,168,171,],[-37,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,-36,-41,-52,89,91,-71,-35,-84,110,-27,-51,-47,114,-70,118,120,121,124,-19,-20,-22,-26,-75,-77,-76,-84,-50,140,144,145,-23,-25,-21,-78,-24,156,-33,165,-32,171,-34,]),'RBRACKET':([20,28,32,33,34,35,36,37,38,39,44,45,46,47,64,65,66,75,76,77,84,89,91,95,96,104,110,116,120,121,123,145,],[-37,76,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,-36,-41,-52,96,-71,-73,-35,-27,-47,115,-70,123,-26,-72,-75,-77,-76,-78,]),'COMMA':([20,32,33,34,35,36,37,38,39,44,45,46,47,64,65,66,75,76,77,84,88,89,90,91,96,98,99,103,107,109,110,116,120,121,123,125,127,136,138,139,145,148,150,160,],[-37,-38,-39,-40,-42,-43,-44,-45,-46,-80,-81,-82,-83,-36,-41,-52,97,-71,-73,-35,111,-27,-51,-47,-70,117,111,122,126,-22,-26,-72,-75,-77,-76,-84,-50,-23,-25,-21,-78,-24,155,164,]),'COLON':([22,71,115,124,125,],[68,92,131,135,137,]),'LBRACE':([40,41,42,114,119,124,140,147,157,],[-66,-67,-68,130,-69,134,149,153,161,]),'IN':([93,],[113,]),'RANGE':([113,],[129,]),'ELSE':([151,],[157,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'content':([2,130,134,149,153,161,],[3,142,146,154,158,166,]),'statement_list':([2,130,134,149,153,161,],[4,4,4,4,4,4,]),'empty':([2,86,125,130,134,149,153,161,],[5,108,138,5,5,5,5,5,]),'statement':([4,],[7,]),'content_no_return':([4,],[8,]),'exp':([4,19,23,28,51,68,69,73,74,78,79,81,82,83,85,92,97,111,117,131,137,141,155,163,164,],[9,64,70,77,84,87,90,94,95,98,90,101,102,103,104,112,116,127,132,143,148,150,160,167,168,]),'function':([4,],[10,]),'function_return':([4,],[11,]),'loop':([4,],[12,]),'conditional':([4,157,],[13,162,]),'var':([4,],[14,]),'assign':([4,],[15,]),'list_assign':([4,],[16,]),'add_list_item':([4,],[17,]),'console':([4,],[18,]),'op_bool_un':([4,19,23,28,51,68,69,73,74,78,79,81,82,83,85,92,97,111,117,131,137,141,155,163,164,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'primary_exp':([4,19,23,28,51,68,69,73,74,78,79,81,82,83,85,92,97,111,117,131,137,141,155,163,164,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'type':([4,80,86,126,135,],[24,100,106,106,147,]),'id':([4,19,23,28,51,68,69,73,74,78,79,81,82,83,85,92,97,111,117,131,137,141,155,163,164,],[27,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'call_func':([4,19,23,28,51,68,69,73,74,78,79,81,82,83,85,92,97,111,117,131,137,141,155,163,164,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'primitive':([4,19,23,28,51,68,69,73,74,78,79,81,82,83,85,92,97,111,117,122,131,137,141,155,163,164,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,133,34,34,34,34,34,34,]),'len_list_item':([4,19,23,28,51,68,69,73,74,78,79,81,82,83,85,92,97,111,117,131,137,141,155,163,164,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'remove_list_item':([4,19,23,28,51,68,69,73,74,78,79,81,82,83,85,92,97,111,117,131,137,141,155,163,164,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'read_list_item':([4,19,23,28,51,68,69,73,74,78,79,81,82,83,85,92,97,111,117,131,137,141,155,163,164,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'has_list_item':([4,19,23,28,51,68,69,73,74,78,79,81,82,83,85,92,97,111,117,131,137,141,155,163,164,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'list':([4,19,23,28,51,68,69,73,74,78,79,81,82,83,85,92,97,111,117,131,137,141,155,163,164,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'operator':([9,64,70,77,84,87,90,94,95,98,101,102,103,104,112,116,127,132,143,148,150,160,167,168,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'list_content':([28,],[75,]),'args':([69,79,],[88,99,]),'opt_param_list':([86,],[105,]),'param_list':([86,],[107,]),'param':([86,126,],[109,139,]),'range':([113,],[128,]),'opt_default':([125,],[136,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> START content END','program',3,'p_program','parser.py',17),
  ('content -> statement_list','content',1,'p_content','parser.py',22),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> empty','statement_list',1,'p_statement_list','parser.py',28),
  ('statement -> content_no_return','statement',1,'p_statement','parser.py',36),
  ('statement -> exp','statement',1,'p_statement','parser.py',37),
  ('content_no_return -> function','content_no_return',1,'p_content_no_return','parser.py',50),
  ('content_no_return -> function_return','content_no_return',1,'p_content_no_return','parser.py',51),
  ('content_no_return -> loop','content_no_return',1,'p_content_no_return','parser.py',52),
  ('content_no_return -> conditional','content_no_return',1,'p_content_no_return','parser.py',53),
  ('content_no_return -> var','content_no_return',1,'p_content_no_return','parser.py',54),
  ('content_no_return -> assign','content_no_return',1,'p_content_no_return','parser.py',55),
  ('content_no_return -> list_assign','content_no_return',1,'p_content_no_return','parser.py',56),
  ('content_no_return -> add_list_item','content_no_return',1,'p_content_no_return','parser.py',57),
  ('content_no_return -> console','content_no_return',1,'p_content_no_return','parser.py',58),
  ('console -> CONSOLE LPAREN args RPAREN','console',4,'p_console','parser.py',63),
  ('function -> FUNC ID LPAREN opt_param_list RPAREN LBRACE content RBRACE','function',8,'p_function','parser.py',74),
  ('function_return -> FUNC ID LPAREN opt_param_list RPAREN COLON type LBRACE content RETURN exp RBRACE','function_return',12,'p_function_return','parser.py',80),
  ('opt_param_list -> param_list','opt_param_list',1,'p_opt_param_list','parser.py',84),
  ('opt_param_list -> empty','opt_param_list',1,'p_opt_param_list','parser.py',85),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list','parser.py',89),
  ('param_list -> param','param_list',1,'p_param_list','parser.py',90),
  ('param -> type ID opt_default','param',3,'p_param','parser.py',97),
  ('opt_default -> COLON exp','opt_default',2,'p_opt_default','parser.py',101),
  ('opt_default -> empty','opt_default',1,'p_opt_default','parser.py',102),
  ('call_func -> ID LPAREN args RPAREN','call_func',4,'p_call_func','parser.py',106),
  ('call_func -> ID LPAREN RPAREN','call_func',3,'p_call_func','parser.py',107),
  ('conditional -> IF LPAREN exp RPAREN LBRACE content RBRACE','conditional',7,'p_conditional','parser.py',117),
  ('conditional -> IF LPAREN exp RPAREN LBRACE content RBRACE ELSE LBRACE content RBRACE','conditional',11,'p_conditional','parser.py',118),
  ('conditional -> IF LPAREN exp RPAREN LBRACE content RBRACE ELSE conditional','conditional',9,'p_conditional','parser.py',119),
  ('loop -> LOOP LPAREN ID IN range RPAREN LBRACE content RBRACE','loop',9,'p_loop','parser.py',129),
  ('range -> RANGE LPAREN exp COMMA exp RPAREN','range',6,'p_range','parser.py',137),
  ('range -> RANGE LPAREN exp RPAREN','range',4,'p_range','parser.py',138),
  ('range -> RANGE LPAREN exp COMMA exp COMMA exp RPAREN','range',8,'p_range','parser.py',139),
  ('exp -> exp operator exp','exp',3,'p_exp','parser.py',151),
  ('exp -> op_bool_un exp','exp',2,'p_exp','parser.py',152),
  ('exp -> primary_exp','exp',1,'p_exp','parser.py',153),
  ('primary_exp -> error','primary_exp',1,'p_primary_exp','parser.py',172),
  ('primary_exp -> call_func','primary_exp',1,'p_primary_exp','parser.py',173),
  ('primary_exp -> primitive','primary_exp',1,'p_primary_exp','parser.py',174),
  ('primary_exp -> id','primary_exp',1,'p_primary_exp','parser.py',175),
  ('primary_exp -> len_list_item','primary_exp',1,'p_primary_exp','parser.py',176),
  ('primary_exp -> remove_list_item','primary_exp',1,'p_primary_exp','parser.py',177),
  ('primary_exp -> read_list_item','primary_exp',1,'p_primary_exp','parser.py',178),
  ('primary_exp -> has_list_item','primary_exp',1,'p_primary_exp','parser.py',179),
  ('primary_exp -> list','primary_exp',1,'p_primary_exp','parser.py',180),
  ('primary_exp -> LPAREN exp RPAREN','primary_exp',3,'p_primary_exp','parser.py',181),
  ('var -> type ID COLON exp','var',4,'p_var','parser.py',189),
  ('assign -> ID COLON exp','assign',3,'p_assign','parser.py',194),
  ('args -> args COMMA exp','args',3,'p_args','parser.py',199),
  ('args -> exp','args',1,'p_args','parser.py',200),
  ('id -> ID','id',1,'p_id','parser.py',208),
  ('operator -> PLUS','operator',1,'p_operator','parser.py',216),
  ('operator -> MINUS','operator',1,'p_operator','parser.py',217),
  ('operator -> MULTIPLY','operator',1,'p_operator','parser.py',218),
  ('operator -> DIVIDE','operator',1,'p_operator','parser.py',219),
  ('operator -> AND','operator',1,'p_operator','parser.py',220),
  ('operator -> OR','operator',1,'p_operator','parser.py',221),
  ('operator -> LT','operator',1,'p_operator','parser.py',222),
  ('operator -> GT','operator',1,'p_operator','parser.py',223),
  ('operator -> LE','operator',1,'p_operator','parser.py',224),
  ('operator -> GE','operator',1,'p_operator','parser.py',225),
  ('operator -> EQ','operator',1,'p_operator','parser.py',226),
  ('operator -> NE','operator',1,'p_operator','parser.py',227),
  ('op_bool_un -> NOT','op_bool_un',1,'p_op_bool_un','parser.py',232),
  ('type -> STR','type',1,'p_type','parser.py',237),
  ('type -> NUM','type',1,'p_type','parser.py',238),
  ('type -> BOOL','type',1,'p_type','parser.py',239),
  ('type -> LIST LT type GT','type',4,'p_type','parser.py',240),
  ('list -> LBRACKET list_content RBRACKET','list',3,'p_list','parser.py',249),
  ('list -> LBRACKET RBRACKET','list',2,'p_list','parser.py',250),
  ('list_content -> list_content COMMA exp','list_content',3,'p_list_content','parser.py',257),
  ('list_content -> exp','list_content',1,'p_list_content','parser.py',258),
  ('add_list_item -> ADD LPAREN exp COMMA exp RPAREN','add_list_item',6,'p_add_list_item','parser.py',265),
  ('len_list_item -> SIZE LPAREN exp RPAREN','len_list_item',4,'p_len_list_item','parser.py',269),
  ('read_list_item -> id LBRACKET exp RBRACKET','read_list_item',4,'p_read_list_item','parser.py',274),
  ('remove_list_item -> REMOVE LPAREN exp RPAREN','remove_list_item',4,'p_remove_list_item','parser.py',278),
  ('has_list_item -> HAS LPAREN exp COMMA primitive RPAREN','has_list_item',6,'p_has_list_item','parser.py',282),
  ('list_assign -> id LBRACKET exp RBRACKET COLON exp','list_assign',6,'p_list_assign','parser.py',286),
  ('primitive -> NUMBER','primitive',1,'p_primitive','parser.py',291),
  ('primitive -> STRING','primitive',1,'p_primitive','parser.py',292),
  ('primitive -> TRUE','primitive',1,'p_primitive','parser.py',293),
  ('primitive -> FALSE','primitive',1,'p_primitive','parser.py',294),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',299),
]
