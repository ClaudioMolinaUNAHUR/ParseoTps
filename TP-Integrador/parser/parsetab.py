
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightELSEleftORleftANDrightNOTnonassocEQNELTLEGTGEleftPLUSMINUSleftMULTIPLYDIVIDEADD AND BOOL COLON COMMA COMMENT CONSOLE DIVIDE ELSE END EQ FALSE FUNC GE GT HAS ID IF IN LBRACE LBRACKET LE LIST LOOP LPAREN LT MINUS MULTIPLY NE NOT NUM NUMBER OR PLUS RANGE RBRACE RBRACKET REMOVE RETURN RPAREN SIZE START STR STRING TRUEprogram : START content ENDcontent : statement_liststatement_list : statement_list statement\n                      | emptystatement : content_no_return\n                 | expcontent_no_return : function\n                         | function_return\n                         | loop\n                         | conditional\n                         | var\n                         | assign\n                         | list_assign\n                         | add_list_item\n                         | consoleconsole : CONSOLE LPAREN args RPARENfunction : FUNC ID LPAREN opt_param_list RPAREN LBRACE content RBRACEfunction_return : FUNC ID LPAREN opt_param_list RPAREN COLON type LBRACE content RETURN exp RBRACEopt_param_list : param_list\n                      | emptyparam_list : param_list COMMA param\n                  | paramparam : type ID opt_defaultopt_default : COLON exp\n                   | emptycall_func : ID LPAREN args RPAREN\n                 | ID LPAREN RPARENconditional : IF LPAREN exp RPAREN LBRACE content RBRACE\n                   | IF LPAREN exp RPAREN LBRACE content RBRACE ELSE LBRACE content RBRACE\n                   | IF LPAREN exp RPAREN LBRACE content RBRACE ELSE conditionalloop : LOOP LPAREN ID IN range RPAREN LBRACE content RBRACErange : RANGE LPAREN exp COMMA exp RPAREN\n             | RANGE LPAREN exp RPAREN\n             | RANGE LPAREN exp COMMA exp COMMA exp RPARENexp : exp operator exp\n           | op_bool_un exp\n           | primary_expprimary_exp : call_func\n                   | primitive\n                   | id\n                   | len_list_item\n                   | remove_list_item\n                   | read_list_item\n                   | has_list_item\n                   | list\n                   | LPAREN exp RPARENvar : type ID COLON expassign : ID COLON expargs : args COMMA exp\n            | expid : IDoperator : PLUS\n                | MINUS\n                | MULTIPLY\n                | DIVIDE\n                | AND\n                | OR\n                | LT\n                | GT\n                | LE\n                | GE\n                | EQ\n                | NEop_bool_un : NOTtype : STR\n            | NUM\n            | BOOL\n            | LIST LT type GTlist : LBRACKET list_content RBRACKET\n            | LBRACKET RBRACKETlist_content : list_content COMMA exp\n                    | expadd_list_item : ADD LPAREN exp COMMA exp RPARENlen_list_item : SIZE LPAREN exp RPARENread_list_item : id LBRACKET exp RBRACKETremove_list_item : REMOVE LPAREN exp RPARENhas_list_item : HAS LPAREN exp COMMA primitive RPARENlist_assign : id LBRACKET exp RBRACKET COLON expprimitive : NUMBER\n                 | STRING\n                 | TRUE\n                 | FALSEempty :'
    
_lr_action_items = {'START':([0,],[2,]),'$end':([1,6,],[0,-1,]),'FUNC':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,22,27,32,33,34,35,36,37,38,43,44,45,46,63,64,65,75,83,86,88,90,95,109,111,114,117,119,120,122,129,133,142,143,144,148,150,151,152,158,160,161,168,169,],[-83,21,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-37,-51,-40,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,-36,-40,-51,-70,-35,-48,-27,-46,-69,-26,-47,-75,-16,-74,-76,-75,-83,-83,-78,-73,-77,-83,-28,-17,-83,-31,-83,-30,-29,-18,]),'LOOP':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,22,27,32,33,34,35,36,37,38,43,44,45,46,63,64,65,75,83,86,88,90,95,109,111,114,117,119,120,122,129,133,142,143,144,148,150,151,152,158,160,161,168,169,],[-83,25,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-37,-51,-40,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,-36,-40,-51,-70,-35,-48,-27,-46,-69,-26,-47,-75,-16,-74,-76,-75,-83,-83,-78,-73,-77,-83,-28,-17,-83,-31,-83,-30,-29,-18,]),'IF':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,22,27,32,33,34,35,36,37,38,43,44,45,46,63,64,65,75,83,86,88,90,95,109,111,114,117,119,120,122,129,133,142,143,144,148,150,151,152,156,158,160,161,168,169,],[-83,26,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-37,-51,-40,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,-36,-40,-51,-70,-35,-48,-27,-46,-69,-26,-47,-75,-16,-74,-76,-75,-83,-83,-78,-73,-77,-83,-28,-17,-83,26,-31,-83,-30,-29,-18,]),'ID':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,71,72,73,75,77,78,80,81,82,83,84,86,88,90,91,95,96,105,109,110,111,114,116,117,118,119,120,122,129,130,133,136,140,142,143,144,148,150,151,152,154,158,160,161,162,163,168,169,],[-83,22,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,65,-37,66,-51,65,70,-40,65,-64,-38,-39,-41,-42,-43,-44,-45,-65,-66,-67,-79,-80,-81,-82,65,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-36,-40,-51,65,65,92,65,65,-70,65,65,65,65,65,-35,65,-48,-27,-46,65,-69,65,124,-26,65,-47,-75,65,-16,-68,-74,-76,-75,-83,65,-83,65,65,-78,-73,-77,-83,-28,-17,-83,65,-31,-83,-30,65,65,-29,-18,]),'ADD':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,22,27,32,33,34,35,36,37,38,43,44,45,46,63,64,65,75,83,86,88,90,95,109,111,114,117,119,120,122,129,133,142,143,144,148,150,151,152,158,160,161,168,169,],[-83,29,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-37,-51,-40,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,-36,-40,-51,-70,-35,-48,-27,-46,-69,-26,-47,-75,-16,-74,-76,-75,-83,-83,-78,-73,-77,-83,-28,-17,-83,-31,-83,-30,-29,-18,]),'CONSOLE':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,22,27,32,33,34,35,36,37,38,43,44,45,46,63,64,65,75,83,86,88,90,95,109,111,114,117,119,120,122,129,133,142,143,144,148,150,151,152,158,160,161,168,169,],[-83,30,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-37,-51,-40,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,-36,-40,-51,-70,-35,-48,-27,-46,-69,-26,-47,-75,-16,-74,-76,-75,-83,-83,-78,-73,-77,-83,-28,-17,-83,-31,-83,-30,-29,-18,]),'NOT':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,27,28,31,32,33,34,35,36,37,38,43,44,45,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,72,73,75,77,78,80,81,82,83,84,86,88,90,91,95,96,109,110,111,114,116,117,119,120,122,129,130,133,136,140,142,143,144,148,150,151,152,154,158,160,161,162,163,168,169,],[-83,31,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,31,-37,-51,31,-40,31,-64,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,31,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-36,-40,-51,31,31,31,31,-70,31,31,31,31,31,-35,31,-48,-27,-46,31,-69,31,-26,31,-47,-75,31,-16,-74,-76,-75,-83,31,-83,31,31,-78,-73,-77,-83,-28,-17,-83,31,-31,-83,-30,31,31,-29,-18,]),'LPAREN':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,75,77,78,80,81,82,83,84,86,88,90,91,95,96,109,110,111,114,116,117,119,120,122,128,129,130,133,136,140,142,143,144,148,150,151,152,154,158,160,161,162,163,168,169,],[-83,23,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,23,-37,68,23,71,72,-40,23,77,78,-64,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,80,81,82,23,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-36,-40,68,85,23,23,23,23,-70,23,23,23,23,23,-35,23,-48,-27,-46,23,-69,23,-26,23,-47,-75,23,-16,-74,-76,-75,140,-83,23,-83,23,23,-78,-73,-77,-83,-28,-17,-83,23,-31,-83,-30,23,23,-29,-18,]),'STR':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,22,27,32,33,34,35,36,37,38,43,44,45,46,63,64,65,75,79,83,85,86,88,90,95,109,111,114,117,119,120,122,125,129,133,134,142,143,144,148,150,151,152,158,160,161,168,169,],[-83,39,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-37,-51,-40,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,-36,-40,-51,-70,39,-35,39,-48,-27,-46,-69,-26,-47,-75,-16,-74,-76,-75,39,-83,-83,39,-78,-73,-77,-83,-28,-17,-83,-31,-83,-30,-29,-18,]),'NUM':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,22,27,32,33,34,35,36,37,38,43,44,45,46,63,64,65,75,79,83,85,86,88,90,95,109,111,114,117,119,120,122,125,129,133,134,142,143,144,148,150,151,152,158,160,161,168,169,],[-83,40,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-37,-51,-40,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,-36,-40,-51,-70,40,-35,40,-48,-27,-46,-69,-26,-47,-75,-16,-74,-76,-75,40,-83,-83,40,-78,-73,-77,-83,-28,-17,-83,-31,-83,-30,-29,-18,]),'BOOL':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,22,27,32,33,34,35,36,37,38,43,44,45,46,63,64,65,75,79,83,85,86,88,90,95,109,111,114,117,119,120,122,125,129,133,134,142,143,144,148,150,151,152,158,160,161,168,169,],[-83,41,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-37,-51,-40,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,-36,-40,-51,-70,41,-35,41,-48,-27,-46,-69,-26,-47,-75,-16,-74,-76,-75,41,-83,-83,41,-78,-73,-77,-83,-28,-17,-83,-31,-83,-30,-29,-18,]),'LIST':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,22,27,32,33,34,35,36,37,38,43,44,45,46,63,64,65,75,79,83,85,86,88,90,95,109,111,114,117,119,120,122,125,129,133,134,142,143,144,148,150,151,152,158,160,161,168,169,],[-83,42,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-37,-51,-40,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,-36,-40,-51,-70,42,-35,42,-48,-27,-46,-69,-26,-47,-75,-16,-74,-76,-75,42,-83,-83,42,-78,-73,-77,-83,-28,-17,-83,-31,-83,-30,-29,-18,]),'NUMBER':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,27,28,31,32,33,34,35,36,37,38,43,44,45,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,72,73,75,77,78,80,81,82,83,84,86,88,90,91,95,96,109,110,111,114,116,117,119,120,121,122,129,130,133,136,140,142,143,144,148,150,151,152,154,158,160,161,162,163,168,169,],[-83,43,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,43,-37,-51,43,-40,43,-64,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,43,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-36,-40,-51,43,43,43,43,-70,43,43,43,43,43,-35,43,-48,-27,-46,43,-69,43,-26,43,-47,-75,43,-16,-74,-76,43,-75,-83,43,-83,43,43,-78,-73,-77,-83,-28,-17,-83,43,-31,-83,-30,43,43,-29,-18,]),'STRING':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,27,28,31,32,33,34,35,36,37,38,43,44,45,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,72,73,75,77,78,80,81,82,83,84,86,88,90,91,95,96,109,110,111,114,116,117,119,120,121,122,129,130,133,136,140,142,143,144,148,150,151,152,154,158,160,161,162,163,168,169,],[-83,44,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,44,-37,-51,44,-40,44,-64,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,44,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-36,-40,-51,44,44,44,44,-70,44,44,44,44,44,-35,44,-48,-27,-46,44,-69,44,-26,44,-47,-75,44,-16,-74,-76,44,-75,-83,44,-83,44,44,-78,-73,-77,-83,-28,-17,-83,44,-31,-83,-30,44,44,-29,-18,]),'TRUE':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,27,28,31,32,33,34,35,36,37,38,43,44,45,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,72,73,75,77,78,80,81,82,83,84,86,88,90,91,95,96,109,110,111,114,116,117,119,120,121,122,129,130,133,136,140,142,143,144,148,150,151,152,154,158,160,161,162,163,168,169,],[-83,45,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,45,-37,-51,45,-40,45,-64,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,45,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-36,-40,-51,45,45,45,45,-70,45,45,45,45,45,-35,45,-48,-27,-46,45,-69,45,-26,45,-47,-75,45,-16,-74,-76,45,-75,-83,45,-83,45,45,-78,-73,-77,-83,-28,-17,-83,45,-31,-83,-30,45,45,-29,-18,]),'FALSE':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,27,28,31,32,33,34,35,36,37,38,43,44,45,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,72,73,75,77,78,80,81,82,83,84,86,88,90,91,95,96,109,110,111,114,116,117,119,120,121,122,129,130,133,136,140,142,143,144,148,150,151,152,154,158,160,161,162,163,168,169,],[-83,46,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,46,-37,-51,46,-40,46,-64,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,46,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-36,-40,-51,46,46,46,46,-70,46,46,46,46,46,-35,46,-48,-27,-46,46,-69,46,-26,46,-47,-75,46,-16,-74,-76,46,-75,-83,46,-83,46,46,-78,-73,-77,-83,-28,-17,-83,46,-31,-83,-30,46,46,-29,-18,]),'SIZE':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,27,28,31,32,33,34,35,36,37,38,43,44,45,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,72,73,75,77,78,80,81,82,83,84,86,88,90,91,95,96,109,110,111,114,116,117,119,120,122,129,130,133,136,140,142,143,144,148,150,151,152,154,158,160,161,162,163,168,169,],[-83,47,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,47,-37,-51,47,-40,47,-64,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,47,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-36,-40,-51,47,47,47,47,-70,47,47,47,47,47,-35,47,-48,-27,-46,47,-69,47,-26,47,-47,-75,47,-16,-74,-76,-75,-83,47,-83,47,47,-78,-73,-77,-83,-28,-17,-83,47,-31,-83,-30,47,47,-29,-18,]),'REMOVE':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,27,28,31,32,33,34,35,36,37,38,43,44,45,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,72,73,75,77,78,80,81,82,83,84,86,88,90,91,95,96,109,110,111,114,116,117,119,120,122,129,130,133,136,140,142,143,144,148,150,151,152,154,158,160,161,162,163,168,169,],[-83,48,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,48,-37,-51,48,-40,48,-64,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,48,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-36,-40,-51,48,48,48,48,-70,48,48,48,48,48,-35,48,-48,-27,-46,48,-69,48,-26,48,-47,-75,48,-16,-74,-76,-75,-83,48,-83,48,48,-78,-73,-77,-83,-28,-17,-83,48,-31,-83,-30,48,48,-29,-18,]),'HAS':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,27,28,31,32,33,34,35,36,37,38,43,44,45,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,72,73,75,77,78,80,81,82,83,84,86,88,90,91,95,96,109,110,111,114,116,117,119,120,122,129,130,133,136,140,142,143,144,148,150,151,152,154,158,160,161,162,163,168,169,],[-83,49,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,49,-37,-51,49,-40,49,-64,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,49,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-36,-40,-51,49,49,49,49,-70,49,49,49,49,49,-35,49,-48,-27,-46,49,-69,49,-26,49,-47,-75,49,-16,-74,-76,-75,-83,49,-83,49,49,-78,-73,-77,-83,-28,-17,-83,49,-31,-83,-30,49,49,-29,-18,]),'LBRACKET':([2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,27,28,31,32,33,34,35,36,37,38,43,44,45,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,72,73,75,77,78,80,81,82,83,84,86,88,90,91,95,96,109,110,111,114,116,117,119,120,122,129,130,133,136,140,142,143,144,148,150,151,152,154,158,160,161,162,163,168,169,],[-83,28,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,28,-37,-51,28,73,28,-64,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,28,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-36,84,-51,28,28,28,28,-70,28,28,28,28,28,-35,28,-48,-27,-46,28,-69,28,-26,28,-47,-75,28,-16,-74,-76,-75,-83,28,-83,28,28,-78,-73,-77,-83,-28,-17,-83,28,-31,-83,-30,28,28,-29,-18,]),'END':([2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,22,27,32,33,34,35,36,37,38,43,44,45,46,63,64,65,75,83,86,88,90,95,109,111,114,117,119,120,122,142,143,144,150,151,158,161,168,169,],[-83,6,-2,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-37,-51,-40,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,-36,-40,-51,-70,-35,-48,-27,-46,-69,-26,-47,-75,-16,-74,-76,-75,-78,-73,-77,-28,-17,-31,-30,-29,-18,]),'RBRACE':([4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,22,27,32,33,34,35,36,37,38,43,44,45,46,63,64,65,75,83,86,88,90,95,109,111,114,117,119,120,122,129,133,141,142,143,144,145,148,150,151,153,158,160,161,165,166,168,169,],[-2,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-37,-51,-40,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,-36,-40,-51,-70,-35,-48,-27,-46,-69,-26,-47,-75,-16,-74,-76,-75,-83,-83,150,-78,-73,-77,151,-83,-28,-17,158,-31,-83,-30,168,169,-29,-18,]),'RETURN':([4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,22,27,32,33,34,35,36,37,38,43,44,45,46,63,64,65,75,83,86,88,90,95,109,111,114,117,119,120,122,142,143,144,150,151,152,157,158,161,168,169,],[-2,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-37,-51,-40,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,-36,-40,-51,-70,-35,-48,-27,-46,-69,-26,-47,-75,-16,-74,-76,-75,-78,-73,-77,-28,-17,-83,162,-31,-30,-29,-18,]),'PLUS':([9,20,22,27,32,33,34,35,36,37,38,43,44,45,46,63,64,65,69,75,76,83,86,88,89,90,93,94,95,97,100,101,102,103,109,111,114,115,119,120,122,126,131,142,144,147,149,159,166,167,],[51,-37,-51,-40,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,51,-40,-51,51,-70,51,51,51,-27,51,-46,51,51,-69,51,51,51,51,51,-26,51,-75,51,-74,-76,-75,51,51,51,-77,51,51,51,51,51,]),'MINUS':([9,20,22,27,32,33,34,35,36,37,38,43,44,45,46,63,64,65,69,75,76,83,86,88,89,90,93,94,95,97,100,101,102,103,109,111,114,115,119,120,122,126,131,142,144,147,149,159,166,167,],[52,-37,-51,-40,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,52,-40,-51,52,-70,52,52,52,-27,52,-46,52,52,-69,52,52,52,52,52,-26,52,-75,52,-74,-76,-75,52,52,52,-77,52,52,52,52,52,]),'MULTIPLY':([9,20,22,27,32,33,34,35,36,37,38,43,44,45,46,63,64,65,69,75,76,83,86,88,89,90,93,94,95,97,100,101,102,103,109,111,114,115,119,120,122,126,131,142,144,147,149,159,166,167,],[53,-37,-51,-40,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,53,-40,-51,53,-70,53,53,53,-27,53,-46,53,53,-69,53,53,53,53,53,-26,53,-75,53,-74,-76,-75,53,53,53,-77,53,53,53,53,53,]),'DIVIDE':([9,20,22,27,32,33,34,35,36,37,38,43,44,45,46,63,64,65,69,75,76,83,86,88,89,90,93,94,95,97,100,101,102,103,109,111,114,115,119,120,122,126,131,142,144,147,149,159,166,167,],[54,-37,-51,-40,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,54,-40,-51,54,-70,54,54,54,-27,54,-46,54,54,-69,54,54,54,54,54,-26,54,-75,54,-74,-76,-75,54,54,54,-77,54,54,54,54,54,]),'AND':([9,20,22,27,32,33,34,35,36,37,38,43,44,45,46,63,64,65,69,75,76,83,86,88,89,90,93,94,95,97,100,101,102,103,109,111,114,115,119,120,122,126,131,142,144,147,149,159,166,167,],[55,-37,-51,-40,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,55,-40,-51,55,-70,55,55,55,-27,55,-46,55,55,-69,55,55,55,55,55,-26,55,-75,55,-74,-76,-75,55,55,55,-77,55,55,55,55,55,]),'OR':([9,20,22,27,32,33,34,35,36,37,38,43,44,45,46,63,64,65,69,75,76,83,86,88,89,90,93,94,95,97,100,101,102,103,109,111,114,115,119,120,122,126,131,142,144,147,149,159,166,167,],[56,-37,-51,-40,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,56,-40,-51,56,-70,56,56,56,-27,56,-46,56,56,-69,56,56,56,56,56,-26,56,-75,56,-74,-76,-75,56,56,56,-77,56,56,56,56,56,]),'LT':([9,20,22,27,32,33,34,35,36,37,38,42,43,44,45,46,63,64,65,69,75,76,83,86,88,89,90,93,94,95,97,100,101,102,103,109,111,114,115,119,120,122,126,131,142,144,147,149,159,166,167,],[57,-37,-51,-40,-38,-39,-41,-42,-43,-44,-45,79,-79,-80,-81,-82,57,-40,-51,57,-70,57,57,57,-27,57,-46,57,57,-69,57,57,57,57,57,-26,57,-75,57,-74,-76,-75,57,57,57,-77,57,57,57,57,57,]),'GT':([9,20,22,27,32,33,34,35,36,37,38,39,40,41,43,44,45,46,63,64,65,69,75,76,83,86,88,89,90,93,94,95,97,99,100,101,102,103,109,111,114,115,118,119,120,122,126,131,142,144,147,149,159,166,167,],[58,-37,-51,-40,-38,-39,-41,-42,-43,-44,-45,-65,-66,-67,-79,-80,-81,-82,58,-40,-51,58,-70,58,58,58,-27,58,-46,58,58,-69,58,118,58,58,58,58,-26,58,-75,58,-68,-74,-76,-75,58,58,58,-77,58,58,58,58,58,]),'LE':([9,20,22,27,32,33,34,35,36,37,38,43,44,45,46,63,64,65,69,75,76,83,86,88,89,90,93,94,95,97,100,101,102,103,109,111,114,115,119,120,122,126,131,142,144,147,149,159,166,167,],[59,-37,-51,-40,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,59,-40,-51,59,-70,59,59,59,-27,59,-46,59,59,-69,59,59,59,59,59,-26,59,-75,59,-74,-76,-75,59,59,59,-77,59,59,59,59,59,]),'GE':([9,20,22,27,32,33,34,35,36,37,38,43,44,45,46,63,64,65,69,75,76,83,86,88,89,90,93,94,95,97,100,101,102,103,109,111,114,115,119,120,122,126,131,142,144,147,149,159,166,167,],[60,-37,-51,-40,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,60,-40,-51,60,-70,60,60,60,-27,60,-46,60,60,-69,60,60,60,60,60,-26,60,-75,60,-74,-76,-75,60,60,60,-77,60,60,60,60,60,]),'EQ':([9,20,22,27,32,33,34,35,36,37,38,43,44,45,46,63,64,65,69,75,76,83,86,88,89,90,93,94,95,97,100,101,102,103,109,111,114,115,119,120,122,126,131,142,144,147,149,159,166,167,],[61,-37,-51,-40,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,61,-40,-51,61,-70,61,61,61,-27,61,-46,61,61,-69,61,61,61,61,61,-26,61,-75,61,-74,-76,-75,61,61,61,-77,61,61,61,61,61,]),'NE':([9,20,22,27,32,33,34,35,36,37,38,43,44,45,46,63,64,65,69,75,76,83,86,88,89,90,93,94,95,97,100,101,102,103,109,111,114,115,119,120,122,126,131,142,144,147,149,159,166,167,],[62,-37,-51,-40,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,62,-40,-51,62,-70,62,62,62,-27,62,-46,62,62,-69,62,62,62,62,62,-26,62,-75,62,-74,-76,-75,62,62,62,-77,62,62,62,62,62,]),'RPAREN':([20,32,33,34,35,36,37,38,43,44,45,46,63,64,65,68,69,75,83,85,87,88,89,90,93,95,98,100,101,104,106,107,108,109,119,120,122,124,126,127,131,132,135,137,138,144,147,149,155,159,164,167,170,],[-37,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,-36,-40,-51,88,90,-70,-35,-83,109,-27,-50,-46,113,-69,117,119,120,123,-19,-20,-22,-26,-74,-76,-75,-83,-49,139,143,144,-23,-25,-21,-77,-24,155,-33,164,-32,170,-34,]),'RBRACKET':([20,28,32,33,34,35,36,37,38,43,44,45,46,63,64,65,74,75,76,83,88,90,94,95,103,109,115,119,120,122,144,],[-37,75,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,-36,-40,-51,95,-70,-72,-35,-27,-46,114,-69,122,-26,-71,-74,-76,-75,-77,]),'COMMA':([20,32,33,34,35,36,37,38,43,44,45,46,63,64,65,74,75,76,83,87,88,89,90,95,97,98,102,106,108,109,115,119,120,122,124,126,135,137,138,144,147,149,159,],[-37,-38,-39,-41,-42,-43,-44,-45,-79,-80,-81,-82,-36,-40,-51,96,-70,-72,-35,110,-27,-50,-46,-69,116,110,121,125,-22,-26,-71,-74,-76,-75,-83,-49,-23,-25,-21,-77,-24,154,163,]),'COLON':([22,70,114,123,124,],[67,91,130,134,136,]),'LBRACE':([39,40,41,113,118,123,139,146,156,],[-65,-66,-67,129,-68,133,148,152,160,]),'IN':([92,],[112,]),'RANGE':([112,],[128,]),'ELSE':([150,],[156,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'content':([2,129,133,148,152,160,],[3,141,145,153,157,165,]),'statement_list':([2,129,133,148,152,160,],[4,4,4,4,4,4,]),'empty':([2,85,124,129,133,148,152,160,],[5,107,137,5,5,5,5,5,]),'statement':([4,],[7,]),'content_no_return':([4,],[8,]),'exp':([4,19,23,28,50,67,68,72,73,77,78,80,81,82,84,91,96,110,116,130,136,140,154,162,163,],[9,63,69,76,83,86,89,93,94,97,89,100,101,102,103,111,115,126,131,142,147,149,159,166,167,]),'function':([4,],[10,]),'function_return':([4,],[11,]),'loop':([4,],[12,]),'conditional':([4,156,],[13,161,]),'var':([4,],[14,]),'assign':([4,],[15,]),'list_assign':([4,],[16,]),'add_list_item':([4,],[17,]),'console':([4,],[18,]),'op_bool_un':([4,19,23,28,50,67,68,72,73,77,78,80,81,82,84,91,96,110,116,130,136,140,154,162,163,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'primary_exp':([4,19,23,28,50,67,68,72,73,77,78,80,81,82,84,91,96,110,116,130,136,140,154,162,163,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'type':([4,79,85,125,134,],[24,99,105,105,146,]),'id':([4,19,23,28,50,67,68,72,73,77,78,80,81,82,84,91,96,110,116,130,136,140,154,162,163,],[27,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'call_func':([4,19,23,28,50,67,68,72,73,77,78,80,81,82,84,91,96,110,116,130,136,140,154,162,163,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'primitive':([4,19,23,28,50,67,68,72,73,77,78,80,81,82,84,91,96,110,116,121,130,136,140,154,162,163,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,132,33,33,33,33,33,33,]),'len_list_item':([4,19,23,28,50,67,68,72,73,77,78,80,81,82,84,91,96,110,116,130,136,140,154,162,163,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'remove_list_item':([4,19,23,28,50,67,68,72,73,77,78,80,81,82,84,91,96,110,116,130,136,140,154,162,163,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'read_list_item':([4,19,23,28,50,67,68,72,73,77,78,80,81,82,84,91,96,110,116,130,136,140,154,162,163,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'has_list_item':([4,19,23,28,50,67,68,72,73,77,78,80,81,82,84,91,96,110,116,130,136,140,154,162,163,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'list':([4,19,23,28,50,67,68,72,73,77,78,80,81,82,84,91,96,110,116,130,136,140,154,162,163,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'operator':([9,63,69,76,83,86,89,93,94,97,100,101,102,103,111,115,126,131,142,147,149,159,166,167,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'list_content':([28,],[74,]),'args':([68,78,],[87,98,]),'opt_param_list':([85,],[104,]),'param_list':([85,],[106,]),'param':([85,125,],[108,138,]),'range':([112,],[127,]),'opt_default':([124,],[135,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> START content END','program',3,'p_program','parser.py',21),
  ('content -> statement_list','content',1,'p_content','parser.py',26),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',31),
  ('statement_list -> empty','statement_list',1,'p_statement_list','parser.py',32),
  ('statement -> content_no_return','statement',1,'p_statement','parser.py',40),
  ('statement -> exp','statement',1,'p_statement','parser.py',41),
  ('content_no_return -> function','content_no_return',1,'p_content_no_return','parser.py',54),
  ('content_no_return -> function_return','content_no_return',1,'p_content_no_return','parser.py',55),
  ('content_no_return -> loop','content_no_return',1,'p_content_no_return','parser.py',56),
  ('content_no_return -> conditional','content_no_return',1,'p_content_no_return','parser.py',57),
  ('content_no_return -> var','content_no_return',1,'p_content_no_return','parser.py',58),
  ('content_no_return -> assign','content_no_return',1,'p_content_no_return','parser.py',59),
  ('content_no_return -> list_assign','content_no_return',1,'p_content_no_return','parser.py',60),
  ('content_no_return -> add_list_item','content_no_return',1,'p_content_no_return','parser.py',61),
  ('content_no_return -> console','content_no_return',1,'p_content_no_return','parser.py',62),
  ('console -> CONSOLE LPAREN args RPAREN','console',4,'p_console','parser.py',67),
  ('function -> FUNC ID LPAREN opt_param_list RPAREN LBRACE content RBRACE','function',8,'p_function','parser.py',83),
  ('function_return -> FUNC ID LPAREN opt_param_list RPAREN COLON type LBRACE content RETURN exp RBRACE','function_return',12,'p_function_return','parser.py',89),
  ('opt_param_list -> param_list','opt_param_list',1,'p_opt_param_list','parser.py',93),
  ('opt_param_list -> empty','opt_param_list',1,'p_opt_param_list','parser.py',94),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list','parser.py',98),
  ('param_list -> param','param_list',1,'p_param_list','parser.py',99),
  ('param -> type ID opt_default','param',3,'p_param','parser.py',106),
  ('opt_default -> COLON exp','opt_default',2,'p_opt_default','parser.py',110),
  ('opt_default -> empty','opt_default',1,'p_opt_default','parser.py',111),
  ('call_func -> ID LPAREN args RPAREN','call_func',4,'p_call_func','parser.py',116),
  ('call_func -> ID LPAREN RPAREN','call_func',3,'p_call_func','parser.py',117),
  ('conditional -> IF LPAREN exp RPAREN LBRACE content RBRACE','conditional',7,'p_conditional','parser.py',127),
  ('conditional -> IF LPAREN exp RPAREN LBRACE content RBRACE ELSE LBRACE content RBRACE','conditional',11,'p_conditional','parser.py',128),
  ('conditional -> IF LPAREN exp RPAREN LBRACE content RBRACE ELSE conditional','conditional',9,'p_conditional','parser.py',129),
  ('loop -> LOOP LPAREN ID IN range RPAREN LBRACE content RBRACE','loop',9,'p_loop','parser.py',139),
  ('range -> RANGE LPAREN exp COMMA exp RPAREN','range',6,'p_range','parser.py',147),
  ('range -> RANGE LPAREN exp RPAREN','range',4,'p_range','parser.py',148),
  ('range -> RANGE LPAREN exp COMMA exp COMMA exp RPAREN','range',8,'p_range','parser.py',149),
  ('exp -> exp operator exp','exp',3,'p_exp','parser.py',161),
  ('exp -> op_bool_un exp','exp',2,'p_exp','parser.py',162),
  ('exp -> primary_exp','exp',1,'p_exp','parser.py',163),
  ('primary_exp -> call_func','primary_exp',1,'p_primary_exp','parser.py',182),
  ('primary_exp -> primitive','primary_exp',1,'p_primary_exp','parser.py',183),
  ('primary_exp -> id','primary_exp',1,'p_primary_exp','parser.py',184),
  ('primary_exp -> len_list_item','primary_exp',1,'p_primary_exp','parser.py',185),
  ('primary_exp -> remove_list_item','primary_exp',1,'p_primary_exp','parser.py',186),
  ('primary_exp -> read_list_item','primary_exp',1,'p_primary_exp','parser.py',187),
  ('primary_exp -> has_list_item','primary_exp',1,'p_primary_exp','parser.py',188),
  ('primary_exp -> list','primary_exp',1,'p_primary_exp','parser.py',189),
  ('primary_exp -> LPAREN exp RPAREN','primary_exp',3,'p_primary_exp','parser.py',190),
  ('var -> type ID COLON exp','var',4,'p_var','parser.py',198),
  ('assign -> ID COLON exp','assign',3,'p_assign','parser.py',203),
  ('args -> args COMMA exp','args',3,'p_args','parser.py',208),
  ('args -> exp','args',1,'p_args','parser.py',209),
  ('id -> ID','id',1,'p_id','parser.py',217),
  ('operator -> PLUS','operator',1,'p_operator','parser.py',225),
  ('operator -> MINUS','operator',1,'p_operator','parser.py',226),
  ('operator -> MULTIPLY','operator',1,'p_operator','parser.py',227),
  ('operator -> DIVIDE','operator',1,'p_operator','parser.py',228),
  ('operator -> AND','operator',1,'p_operator','parser.py',229),
  ('operator -> OR','operator',1,'p_operator','parser.py',230),
  ('operator -> LT','operator',1,'p_operator','parser.py',231),
  ('operator -> GT','operator',1,'p_operator','parser.py',232),
  ('operator -> LE','operator',1,'p_operator','parser.py',233),
  ('operator -> GE','operator',1,'p_operator','parser.py',234),
  ('operator -> EQ','operator',1,'p_operator','parser.py',235),
  ('operator -> NE','operator',1,'p_operator','parser.py',236),
  ('op_bool_un -> NOT','op_bool_un',1,'p_op_bool_un','parser.py',241),
  ('type -> STR','type',1,'p_type','parser.py',246),
  ('type -> NUM','type',1,'p_type','parser.py',247),
  ('type -> BOOL','type',1,'p_type','parser.py',248),
  ('type -> LIST LT type GT','type',4,'p_type','parser.py',249),
  ('list -> LBRACKET list_content RBRACKET','list',3,'p_list','parser.py',258),
  ('list -> LBRACKET RBRACKET','list',2,'p_list','parser.py',259),
  ('list_content -> list_content COMMA exp','list_content',3,'p_list_content','parser.py',266),
  ('list_content -> exp','list_content',1,'p_list_content','parser.py',267),
  ('add_list_item -> ADD LPAREN exp COMMA exp RPAREN','add_list_item',6,'p_add_list_item','parser.py',274),
  ('len_list_item -> SIZE LPAREN exp RPAREN','len_list_item',4,'p_len_list_item','parser.py',278),
  ('read_list_item -> id LBRACKET exp RBRACKET','read_list_item',4,'p_read_list_item','parser.py',283),
  ('remove_list_item -> REMOVE LPAREN exp RPAREN','remove_list_item',4,'p_remove_list_item','parser.py',287),
  ('has_list_item -> HAS LPAREN exp COMMA primitive RPAREN','has_list_item',6,'p_has_list_item','parser.py',291),
  ('list_assign -> id LBRACKET exp RBRACKET COLON exp','list_assign',6,'p_list_assign','parser.py',295),
  ('primitive -> NUMBER','primitive',1,'p_primitive','parser.py',300),
  ('primitive -> STRING','primitive',1,'p_primitive','parser.py',301),
  ('primitive -> TRUE','primitive',1,'p_primitive','parser.py',302),
  ('primitive -> FALSE','primitive',1,'p_primitive','parser.py',303),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',312),
]
